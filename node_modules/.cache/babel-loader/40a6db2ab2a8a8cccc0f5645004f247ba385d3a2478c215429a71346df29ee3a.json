{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rk892\\\\OneDrive\\\\Desktop\\\\Krishna's Projects\\\\CHAT\\\\src\\\\components\\\\Message.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Input from './Input';\nimport Messages from './Messages';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Message = message => {\n  _s();\n  const [inputText, setInputText] = useState(\"\");\n  const [items, setItems] = useState([]);\n  const [incr, setIncr] = useState(0);\n\n  //given user_list\n  // const user_list = [\"Alan\", \"Bob\", \"Carol\", \"Dean\", \"Elin\"]\n\n  // const randomNumber = Math.floor(Math.random() * 5);\n\n  // // find first name from list\n  // const userName = user_list[randomNumber];\n\n  // // get first letter from the userName\n  // const getName = userName.charAt(0);\n\n  function handleChange(event) {\n    const newValue = event.target.value;\n    setInputText(newValue);\n  }\n  function addItem() {\n    setItems(prevItems => {\n      return [...prevItems, inputText];\n    });\n    setInputText(\"\");\n  }\n  const incrementCount = () => {\n    // Update state with incremented value\n    setIncr(incr + 1);\n  };\n\n  //get current time \n  const date = new Date();\n  const showTime = date.getHours() + ':' + date.getMinutes();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"message\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messageInfo\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"message-circle\",\n        children: \"RR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nameTime\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"time\",\n          children: showTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messageContent\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Krishna\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"thumb\",\n          onClick: incrementCount,\n          children: [\"\\uD83D\\uDC4D\", incr, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: items.map(todoItem => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: todoItem\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(Message, \"3Hymw+gQNiY8aVjSx+QPIgxOzs4=\");\n_c = Message;\nexport default Message;\nvar _c;\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"names":["React","useState","Input","Messages","Message","message","inputText","setInputText","items","setItems","incr","setIncr","handleChange","event","newValue","target","value","addItem","prevItems","incrementCount","date","Date","showTime","getHours","getMinutes","map","todoItem"],"sources":["C:/Users/rk892/OneDrive/Desktop/Krishna's Projects/CHAT/src/components/Message.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport Input from './Input';\r\nimport Messages from './Messages';\r\n\r\nconst Message = (message) => {\r\n\r\n  const [inputText, setInputText] = useState(\"\");\r\n  const [items, setItems] = useState([]);\r\n  const [incr, setIncr] = useState(0);\r\n\r\n\r\n  //given user_list\r\n  // const user_list = [\"Alan\", \"Bob\", \"Carol\", \"Dean\", \"Elin\"]\r\n\r\n  \r\n  // const randomNumber = Math.floor(Math.random() * 5);\r\n \r\n  // // find first name from list\r\n  // const userName = user_list[randomNumber];\r\n\r\n  // // get first letter from the userName\r\n  // const getName = userName.charAt(0);\r\n\r\n\r\n  function handleChange(event) {\r\n    const newValue = event.target.value;\r\n    setInputText(newValue);\r\n  }\r\n\r\n  function addItem() {\r\n    setItems(prevItems => {\r\n      return [...prevItems, inputText];\r\n    });\r\n    setInputText(\"\");\r\n  }\r\n\r\n  const incrementCount = () => {\r\n    // Update state with incremented value\r\n     setIncr(incr+1);\r\n     \r\n\r\n  };\r\n\r\n  \r\n    //get current time \r\n  const date = new Date();\r\n    const showTime = date.getHours() \r\n        + ':' + date.getMinutes() ;\r\n        \r\n  \r\n\r\n  return (\r\n    <div className='message'>\r\n      \r\n\r\n      <div className=\"messageInfo\">\r\n      <div class=\"message-circle\">RR</div>\r\n      </div>\r\n\r\n      \r\n      <div>\r\n      <div className='nameTime'>\r\n      <div className=\"name\"></div>\r\n      <div className=\"time\">{showTime}</div>\r\n\r\n      </div>\r\n      <div className=\"messageContent\">\r\n          <p>Krishna</p>\r\n         {/* <p>{props.sms}</p> */}\r\n         {/* <p>{message.text}</p> */}\r\n         <span className='thumb' onClick={incrementCount} >üëç{incr} </span>\r\n        \r\n\r\n         <div>\r\n         {items.map(todoItem => (\r\n            <li>{todoItem}</li>\r\n          ))}\r\n         </div>\r\n         \r\n         \r\n        </div>\r\n        \r\n      </div>\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Message"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,QAAQ,MAAM,YAAY;AAAC;AAElC,MAAMC,OAAO,GAAIC,OAAO,IAAK;EAAA;EAE3B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;;EAGnC;EACA;;EAGA;;EAEA;EACA;;EAEA;EACA;;EAGA,SAASW,YAAY,CAACC,KAAK,EAAE;IAC3B,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK;IACnCT,YAAY,CAACO,QAAQ,CAAC;EACxB;EAEA,SAASG,OAAO,GAAG;IACjBR,QAAQ,CAACS,SAAS,IAAI;MACpB,OAAO,CAAC,GAAGA,SAAS,EAAEZ,SAAS,CAAC;IAClC,CAAC,CAAC;IACFC,YAAY,CAAC,EAAE,CAAC;EAClB;EAEA,MAAMY,cAAc,GAAG,MAAM;IAC3B;IACCR,OAAO,CAACD,IAAI,GAAC,CAAC,CAAC;EAGlB,CAAC;;EAGC;EACF,MAAMU,IAAI,GAAG,IAAIC,IAAI,EAAE;EACrB,MAAMC,QAAQ,GAAGF,IAAI,CAACG,QAAQ,EAAE,GAC1B,GAAG,GAAGH,IAAI,CAACI,UAAU,EAAE;EAI/B,oBACE;IAAK,SAAS,EAAC,SAAS;IAAA,wBAGtB;MAAK,SAAS,EAAC,aAAa;MAAA,uBAC5B;QAAK,KAAK,EAAC,gBAAgB;QAAA,UAAC;MAAE;QAAA;QAAA;QAAA;MAAA;IAAM;MAAA;MAAA;MAAA;IAAA,QAC9B,eAGN;MAAA,wBACA;QAAK,SAAS,EAAC,UAAU;QAAA,wBACzB;UAAK,SAAS,EAAC;QAAM;UAAA;UAAA;UAAA;QAAA,QAAO,eAC5B;UAAK,SAAS,EAAC,MAAM;UAAA,UAAEF;QAAQ;UAAA;UAAA;UAAA;QAAA,QAAO;MAAA;QAAA;QAAA;QAAA;MAAA,QAEhC,eACN;QAAK,SAAS,EAAC,gBAAgB;QAAA,wBAC3B;UAAA,UAAG;QAAO;UAAA;UAAA;UAAA;QAAA,QAAI,eAGf;UAAM,SAAS,EAAC,OAAO;UAAC,OAAO,EAAEH,cAAe;UAAA,WAAE,cAAE,EAACT,IAAI,EAAC,GAAC;QAAA;UAAA;UAAA;UAAA;QAAA,QAAO,eAGlE;UAAA,UACCF,KAAK,CAACiB,GAAG,CAACC,QAAQ,iBAChB;YAAA,UAAKA;UAAQ;YAAA;YAAA;YAAA;UAAA,QACd;QAAC;UAAA;UAAA;UAAA;QAAA,QACG;MAAA;QAAA;QAAA;QAAA;MAAA,QAGD;IAAA;MAAA;MAAA;MAAA;IAAA,QAEF;EAAA;IAAA;IAAA;IAAA;EAAA,QAGF;AAEV,CAAC;AAAA,GAnFKtB,OAAO;AAAA,KAAPA,OAAO;AAqFb,eAAeA,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}